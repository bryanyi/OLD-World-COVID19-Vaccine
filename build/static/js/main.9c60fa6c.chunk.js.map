{"version":3,"sources":["components/Navigation.js","components/LoadingComponent.js","components/CountryStats.js","components/InfoDetails.js","components/Chart.js","App.js","index.js"],"names":["Navigation","handleSearch","searchBar","countries","className","name","id","onChange","e","target","value","map","country","i","LoadingComponent","useLoading","loading","indicator","width","containerProps","indicatorEl","CountryStats","filteredCountry","length","Date","date","toDateString","end","Number","total_vaccinations","duration","daily_vaccinations","vaccines","InfoDetails","fetchMostVaccinated","href","source_website","source_name","data","labels","datasets","label","backgroundColor","borderColor","fill","height","Chart","App","useEffect","a","axios","get","setCountries","setSearchBar","setFetchMostVaccinated","useState","filter","toLowerCase","val","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c60fa6c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../css/Navigation.css\";\n\nconst Navigation = ({ handleSearch, searchBar, countries }) => {\n  const handleSearchResult = (e) => {\n    handleSearch(e.target.value);\n  };\n  return (\n    <div className=\"NavigationComponent\">\n      <div className=\"main__title\">\n        <h1>COVID-19</h1>\n        <h1>World Vaccinations</h1>\n      </div>\n      <div className=\"navbar__search\">\n        <form>\n          <h2>Search Country</h2>\n\n          <select\n            name=\"countries\"\n            id=\"select-country\"\n            onChange={handleSearchResult}\n            value={searchBar}\n          >\n            <option value=\"United States\">United States</option>\n            {countries.map((country, i) => (\n              <option value={country.country} key={i}>\n                {country.country}\n              </option>\n            ))}\n          </select>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { useLoading, Puff } from \"@agney/react-loading\";\nimport \"../css/LoadingComponent.css\";\n\nconst LoadingComponent = () => {\n  const { containerProps, indicatorEl } = useLoading({\n    loading: true,\n    indicator: <Puff width=\"80\" />,\n  });\n\n  return (\n    <div className=\"LoadingComponent\" {...containerProps}>\n      {indicatorEl}\n    </div>\n  );\n};\n\nexport default LoadingComponent;\n","import React from \"react\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport CountUp from \"react-countup\";\nimport \"../css/CountryStats.css\";\n\nconst CountryStats = ({ filteredCountry }) => {\n  return (\n    <>\n      {filteredCountry.length == 0 ? (\n        <LoadingComponent />\n      ) : (\n        filteredCountry.map((country, i) => {\n          return (\n            <div className=\"Stats\" key={i}>\n              <div className=\"total_vaccinations\">\n                <h3>Total Vaccinations</h3>\n                <div className=\"divider__line\"></div>\n                <p>{country.country}</p>\n                <p id=\"date\">{new Date(country.date).toDateString()}</p>\n                <h2 id=\"main_result\">\n                  <CountUp\n                    end={Number(country.total_vaccinations)}\n                    duration={1}\n                  />\n                </h2>\n              </div>\n              <div className=\"daily_vaccinations\">\n                <h3>Daily Vaccinations</h3>\n                <div className=\"divider__line\"></div>\n                <p>{country.country}</p>\n                <p id=\"date\">{new Date(country.date).toDateString()}</p>\n                <h2 id=\"main_result\">\n                  <CountUp\n                    end={Number(country.daily_vaccinations)}\n                    duration={1}\n                  />\n                </h2>\n              </div>\n              <div className=\"vaccines\">\n                <h3>Vaccine Used</h3>\n                <div className=\"divider__line\"></div>\n                <p>{country.country}</p>\n                <p id=\"date\">{new Date(country.date).toDateString()}</p>\n                <h2 id=\"vaccine_main_result\">{country.vaccines}</h2>\n              </div>\n            </div>\n          );\n        })\n      )}\n    </>\n  );\n};\n\nexport default CountryStats;\n","import CountUp from \"react-countup\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"../css/InfoDetails.css\";\n\nconst InfoDetails = ({ filteredCountry, fetchMostVaccinated }) => {\n  return (\n    <>\n      {filteredCountry.length == 0 ? (\n        <div className=\"Details\">\n          <div className=\"sources_block\">\n            <h2>Sources</h2>\n            <div className=\"divider__line\"></div>\n          </div>\n          <div className=\"most_vaccinated\">\n            <h2>Most Vaccinated</h2>\n          </div>\n        </div>\n      ) : (\n        filteredCountry.map((country, i) => {\n          return (\n            <div className=\"Details\" key={i}>\n              <div className=\"sources_block\">\n                <h2>Sources</h2>\n                <div className=\"divider__line\"></div>\n                <h3>{country.country}</h3>\n                <div className=\"source_links\">\n                  <a href={country.source_website}>{country.source_name}</a>\n                </div>\n              </div>\n\n              <div className=\"most_vaccinated\">\n                <h2>Most Vaccinated</h2>\n                <div className=\"divider__line\"></div>\n\n                {fetchMostVaccinated.map((country, i) => {\n                  return (\n                    <div key={i}>\n                      <h3 id=\"most_vaccinated\">{country.country}</h3>\n                      <h2 id=\"main_result\">\n                        {\n                          <CountUp\n                            end={Number(country.total_vaccinations)}\n                            duration={1}\n                          />\n                        }\n                      </h2>\n                      <Bar\n                        key={i}\n                        data={{\n                          labels: [\"Total Vaccinations\"],\n                          datasets: [\n                            {\n                              data: [country.total_vaccinations],\n                              label: `Total Vaccinations: ${country.total_vaccinations}`,\n                              backgroundColor: \"#e9c46a\",\n                              borderColor: \"#171717\",\n                              fill: true,\n                            },\n                          ],\n                        }}\n                        height={290}\n                        width={290}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          );\n        })\n      )}\n    </>\n  );\n};\n\nexport default InfoDetails;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"../css/Chart.css\";\n\nconst Chart = ({ filteredCountry }) => {\n  return (\n    <>\n      {filteredCountry.map((country, i) => {\n        return (\n          <div className=\"Chart\" key={i}>\n            <div className=\"total_vaccinations_chart\">\n              <Bar\n                key={i}\n                data={{\n                  labels: [\"Total Vaccinations\"],\n                  datasets: [\n                    {\n                      data: [country.total_vaccinations],\n                      label: `Total Vaccinations in ${country.country}: ${country.total_vaccinations}`,\n                      backgroundColor: \"#e76f51\",\n                      borderColor: \"#171717\",\n                      fill: true,\n                    },\n                  ],\n                }}\n                height={490}\n                width={600}\n              />\n            </div>\n            <div className=\"daily_vaccinations_chart\">\n              <Bar\n                key={i}\n                data={{\n                  labels: [\"Daily Vaccinations\"],\n                  datasets: [\n                    {\n                      data: [country.daily_vaccinations],\n                      label: `Daily Vaccinations in ${country.country}: ${country.daily_vaccinations}`,\n                      backgroundColor: \"#f4a261\",\n                      borderColor: \"#171717\",\n                      fill: true,\n                    },\n                  ],\n                }}\n                height={490}\n                width={600}\n              />\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Chart;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./css/App.css\";\n\n// COMPONENTS\nimport Navigation from \"./components/Navigation\";\nimport CountryStats from \"./components/CountryStats\";\nimport InfoDetails from \"./components/InfoDetails\";\nimport Chart from \"./components/Chart\";\n\nconst App = () => {\n  // FETCH COUNTRIES FROM DJANGO API\n  useEffect(async () => {\n    const { data } = await axios.get(\"http://127.0.0.1:8000\");\n    setCountries(data);\n    setSearchBar(\"United States\");\n  }, []);\n\n  useEffect(async () => {\n    const { data } = await axios.get(\"http://localhost:8000/most-vaccinated/\");\n    setFetchMostVaccinated(data);\n  }, []);\n\n  // SET STATE\n  const [countries, setCountries] = useState([]); // Array of objects\n  const [searchBar, setSearchBar] = useState(\"\"); // String from Navigation.js Component's <select> value\n  const [fetchMostVaccinated, setFetchMostVaccinated] = useState([]); // Array of objects\n\n  // Filter the searched country from Navigation.js component\n  const filteredCountry = countries.filter((country) => {\n    if (country.country.toLowerCase() === searchBar.toLowerCase()) {\n      return country;\n    }\n  });\n\n  const handleSearch = (val) => {\n    setSearchBar(val);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"left__screen\">\n        <Navigation\n          countries={countries}\n          handleSearch={handleSearch}\n          searchBar={searchBar}\n          filteredCountry={filteredCountry}\n        />\n        <CountryStats filteredCountry={filteredCountry} />\n        <Chart filteredCountry={filteredCountry} />\n      </div>\n\n      <div className=\"right__screen\">\n        <InfoDetails\n          filteredCountry={filteredCountry}\n          fetchMostVaccinated={fetchMostVaccinated}\n        />\n      </div>\n      <div className=\"circle1\"></div>\n      <div className=\"circle2\"></div>\n      <div className=\"circle3\"></div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}